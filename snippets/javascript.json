{
    // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    "Print to console": {
        "prefix": [
            "log",
            "con-log"
        ],
        "body": "console.log('$1');",
        "description": "Log output to console"
    },
    "Log object to console": {
        "prefix": "log-obj",
        "body": "console.log({$1});",
        "description": "log a variable to the console as an object"
    },
    "Log object to console as JSON": {
        "prefix": "log-json",
        "body": "console.log('$1: ' + JSON.stringify($1, null, 2));",
        "description": "log a variable to the console as a pretty-printed JSON string"
    },
    "new test file": {
        "prefix": "test-file",
        "description": "set up new test file",
        "body": [
            "import * as React from 'react';",
            "import '@testing-library/jest-dom';",
            "import { act } from 'react-dom/test-utils';",
            "import { render, screen } from '@testing-library/react';",
            "describe('$1', () => {",
            "})"
        ]
    },
    "new describe() function": {
        "prefix": [
            "desc-func",
            "df",
            "describe-function"
        ],
        "description": "set up a new 'describe' test function",
        "body": [
            "describe('$1', () => {",
            "    ",
            "})"
        ]
    },
    "new Jest unit test": {
        "prefix": [
            "unit",
            "utest"
        ],
        "description": "add a new Jest unit test",
        "body": [
            "it('should ${1:do x} when ${2:y}}', () => {",
            "    // arrange",
            "    // act",
            "    // assert",
            "    expect.fail('not implemented')",
            "})"
        ]
    },
    "new async Jest unit test": {
        "prefix": [
            "unit-async",
            "utest-async"
        ],
        "description": "add a new async Jest unit test",
        "body": [
            "it('should ${1:do x} when ${2:y}}', async () => {",
            "    // arrange",
            "    // act",
            "    // assert",
            "    expect.fail('not implemented')",
            "})"
        ]
    }
}