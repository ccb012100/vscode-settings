// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "shift+alt+e",
    "command": "-PowerShell.ExpandAlias",
    "when": "editorTextFocus && editorLangId == 'powershell'"
  },
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+h ctrl+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "ctrl+h ctrl+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+h ctrl+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+h ctrl+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+h ctrl+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+x ctrl+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+f",
    "command": "-cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+e",
    "command": "-cursorLineEnd",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+k ctrl+x",
    "command": "-insertSnippet"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.copyLinesDownAction"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+space",
    "command": "toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+r",
    "command": "editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r ctrl+r",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+r ctrl+w",
    "command": "-editor.action.toggleRenderWhitespace"
  },
  {
    "key": "ctrl+l r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "enter",
    "command": "acceptSelectedSuggestionOnEnter",
    "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.debug.viewlet.action.addFunctionBreakpointAction"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "alt+s",
    "command": "-markdown.extension.editing.toggleStrikethrough",
    "when": "editorTextFocus && !editorReadonly && !isMac && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+x j",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.action.files.openFileFolder"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-workbench.view.explorer"
  },
  {
    "key": "ctrl+x 3",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+x 2",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+alt+o",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+backspace",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+t",
    "command": "-editor.action.transposeLetters",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+o",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+v",
    "command": "-editor.action.toggleColumnSelection"
  },
  {
    "key": "ctrl+h shift+d",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+x r",
    "command": "editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+d",
    "command": "deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+.",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+s",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "f1",
    "command": "workbench.action.openSettings2"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+alt+m",
    "command": "-markdownTablePrettify.prettifyTables",
    "when": "editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "alt+p",
    "command": "-togglePreserveCase",
    "when": "editorFocus"
  },
  {
    "key": "alt+p",
    "command": "-toggleSearchPreserveCase",
    "when": "searchViewletFocus"
  },
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+f",
    "command": "-keybindings.editor.searchKeybindings",
    "when": "inKeybindings"
  },
  {
    "key": "ctrl+f",
    "command": "-settings.action.search",
    "when": "inSettingsEditor"
  },
  {
    "key": "ctrl+i",
    "command": "-markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-rust-analyzer.matchingBrace",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+h s",
    "command": "workbench.action.openSettings2"
  },
  {
    "key": "ctrl+h shift+i",
    "command": "editor.action.peekImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+h shift+r",
    "command": "editor.action.referenceSearch.trigger"
  },
  {
    "key": "ctrl+g x",
    "command": "workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "ctrl+shift+x",
    "command": "-workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "key": "alt+f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+c",
    "command": "-solutionExplorer.copy",
    "when": "view == 'slnexpl' && viewItem == 'project-folder'"
  },
  {
    "key": "ctrl+c",
    "command": "-solutionExplorer.copy",
    "when": "view == 'slnexpl' && viewItem == 'project-file'"
  },
  {
    "key": "ctrl+c",
    "command": "-solutionExplorer.copy",
    "when": "view == 'slnbrw' && viewItem == 'project-folder'"
  },
  {
    "key": "ctrl+c",
    "command": "-solutionExplorer.copy",
    "when": "view == 'slnbrw' && viewItem == 'project-file'"
  },
  {
    "key": "ctrl+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+c",
    "command": "-filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "ctrl+c",
    "command": "-keybindings.editor.copyKeybindingEntry",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "ctrl+c",
    "command": "-search.action.copyMatch",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "key": "ctrl+k ctrl+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+k ctrl+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+k ctrl+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+k ctrl+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+[",
    "command": "-markdown.extension.onOutdentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.extension.togglePreview",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+k v",
    "command": "-markdown.extension.closePreviewToSide",
    "when": "markdownPreviewFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+c",
    "command": "-problems.action.copy",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+c",
    "command": "-remote.tunnel.copyAddressInline",
    "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
  },
  {
    "key": "ctrl+c ctrl+c",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "\u0003"
    }
  },
  {
    "key": "ctrl+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+; ctrl+x",
    "command": "-testing.cancelRun"
  },
  {
    "key": "ctrl+; ctrl+a",
    "command": "-testing.debugAll"
  },
  {
    "key": "ctrl+; ctrl+e",
    "command": "-testing.debugFailTests"
  },
  {
    "key": "ctrl+; ctrl+l",
    "command": "-testing.debugLastRun"
  },
  {
    "key": "ctrl+; ctrl+c",
    "command": "-testing.debugAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+; ctrl+f",
    "command": "-testing.debugCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+; m",
    "command": "-testing.openOutputPeek"
  },
  {
    "key": "ctrl+; l",
    "command": "-testing.reRunLastRun"
  },
  {
    "key": "ctrl+; c",
    "command": "-testing.runAtCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+; ctrl+i",
    "command": "-testing.toggleInlineTestOutput"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k m",
    "command": "-workbench.action.editor.changeLanguageMode",
    "when": "!notebookEditorFocused"
  },
  {
    "key": "ctrl+k c",
    "command": "-workbench.files.action.compareWithClipboard"
  },
  {
    "key": "ctrl+k d",
    "command": "-workbench.files.action.compareWithSaved"
  },
  {
    "key": "ctrl+k ctrl+shift+c",
    "command": "-copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+k o",
    "command": "-workbench.action.files.showOpenedFileInNewWindow",
    "when": "emptyWorkspaceSupport"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openFolder",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+k ctrl+shift+s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+k ctrl+/",
    "command": "-editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+8",
    "command": "-editor.foldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+2",
    "command": "-editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+3",
    "command": "-editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+4",
    "command": "-editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+5",
    "command": "-editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+6",
    "command": "-editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+7",
    "command": "-editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+k ctrl+alt+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+k ctrl+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor"
  },
  {
    "key": "ctrl+k ctrl+q",
    "command": "-workbench.action.navigateToLastEditLocation"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-workbench.action.keybindingsReference"
  },
  {
    "key": "ctrl+k ctrl+t",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "-editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k enter",
    "command": "-workbench.action.keepEditor"
  },
  {
    "key": "ctrl+k up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "ctrl+k ctrl+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+k shift+enter",
    "command": "-workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "ctrl+k z",
    "command": "-workbench.action.toggleZenMode"
  },
  {
    "key": "ctrl+k f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "ctrl+k ctrl+a",
    "command": "-keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "ctrl+k s",
    "command": "-saveAll"
  },
  {
    "key": "ctrl+k f2",
    "command": "-togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor || referenceSearchVisible"
  },
  {
    "key": "ctrl+k p",
    "command": "-workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openLocalFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+s",
    "command": "keybindings.editor.searchKeybindings",
    "when": "inKeybindings"
  },
  {
    "key": "ctrl+h r",
    "command": "references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "ctrl+n",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+x ctrl+c",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+x d",
    "command": "file-browser.open"
  },
  {
    "key": "ctrl+n",
    "command": "cursorDown",
    "when": "textInputFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+a",
    "command": "-file-browser.actions",
    "when": "inFileBrowser"
  },
  {
    "key": "ctrl+a",
    "command": "-editor.action.selectAll"
  },
  {
    "key": "ctrl+x h",
    "command": "editor.action.selectAll"
  },
  {
    "key": "ctrl+x h",
    "command": "list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "ctrl+a",
    "command": "-list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "ctrl+shift+a",
    "command": "editor.action.selectAll"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "alt+enter",
    "command": "-testing.editFocusedTest",
    "when": "focusedView == 'workbench.view.testing'"
  },
  {
    "key": "alt+enter",
    "command": "-search.action.openInEditor",
    "when": "hasSearchResult && searchViewletFocus"
  },
  {
    "key": "ctrl+o",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+-",
    "command": "-decreaseSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+=",
    "command": "-increaseSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+r t",
    "command": "-npm-script.test",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+r alt+c",
    "command": "-dotnet-test-explorer.runTestInContext",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+o",
    "command": "-C_Cpp.SwitchHeaderSource",
    "when": "editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'"
  },
  {
    "key": "shift+escape",
    "command": "-closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-cursorWordPartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+right",
    "command": "-cursorWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+v",
    "command": "-quicktype.pasteJSONAsTypes",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+x 0",
    "command": "workbench.action.closeEditorsAndGroup"
  },
  {
    "key": "ctrl+x 1",
    "command": "workbench.action.closeEditorsInOtherGroups"
  },
  {
    "key": "ctrl+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+n",
    "command": "list.expandSelectionDown",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "down",
    "command": "-scm.viewNextCommit",
    "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "alt+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "alt+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "alt+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "alt+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "alt+6",
    "command": "-workbench.action.openEditorAtIndex6"
  },
  {
    "key": "alt+7",
    "command": "-workbench.action.openEditorAtIndex7"
  },
  {
    "key": "alt+8",
    "command": "-workbench.action.openEditorAtIndex8"
  },
  {
    "key": "alt+9",
    "command": "-workbench.action.openEditorAtIndex9"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+i",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-workbench.action.showTreeHover",
    "when": "customTreeView && listFocus && !inputFocus"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-workbench.action.terminal.focusTabs",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "alt+up",
    "command": "-scm.forceViewPreviousCommit",
    "when": "scmRepository"
  },
  {
    "key": "alt+up",
    "command": "scm.viewPreviousCommit",
    "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "up",
    "command": "-scm.viewPreviousCommit",
    "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k g",
    "command": "-textPowerTools.filterLinesIncludingString",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l ctrl+i",
    "command": "rust-analyzer.toggleInlayHints"
  },
  {
    "key": "shift+alt+l",
    "command": "-bookmarks.expandSelectionToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+j",
    "command": "-bookmarks.expandSelectionToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+k",
    "command": "-bookmarks.shrinkSelection",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+enter",
    "command": "-acceptAlternativeSelectedSuggestion",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+l ctrl+m",
    "command": "markdown.showPreviewToSide",
    "when": "editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+o",
    "command": "-lineBreakInsert",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+e",
    "command": "cursorLineEnd",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "list.expandSelectionUp",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "cursorUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+p",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+alt+o",
    "command": "-editor.action.organizeImports",
    "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
  },
  {
    "key": "ctrl+shift+u",
    "command": "-rust-analyzer.parentModule",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+n",
    "command": "cursorDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+m t",
    "command": "workbench.action.terminal.moveToEditor",
    "when": "terminalFocus && terminalHasBeenCreated"
  },
  {
    "key": "ctrl+l space",
    "command": "editor.action.toggleRenderWhitespace"
  },
  {
    "key": "ctrl+/",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "f2",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+f1",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+h ctrl+s",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showSubtypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showSupertypes",
    "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-csv.preview",
    "when": "editorLangId == 'csv'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-csv.preview",
    "when": "editorLangId == 'tsv'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-csv.preview",
    "when": "editorLangId == 'csv (semicolon)'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-csv.preview",
    "when": "editorLangId == 'csv (pipe)'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-excel.preview",
    "when": "editorLangId == 'excel'"
  },
  {
    "key": "ctrl+shift+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnexpl' && viewItem == 'project-cps'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnexpl' && viewItem == 'project-standard'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnexpl' && viewItem == 'project-website'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnexpl' && viewItem == 'project-file'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnexpl' && viewItem == 'project-folder'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnbrw' && viewItem == 'project-cps'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnbrw' && viewItem == 'project-standard'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnbrw' && viewItem == 'project-website'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnbrw' && viewItem == 'project-file'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createFolder",
    "when": "view == 'slnbrw' && viewItem == 'project-folder'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createSolutionFolder",
    "when": "view == 'slnexpl' && viewItem == 'solution'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createSolutionFolder",
    "when": "view == 'slnexpl' && viewItem == 'solution-cps'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createSolutionFolder",
    "when": "view == 'slnexpl' && viewItem == 'solution-folder'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createSolutionFolder",
    "when": "view == 'slnbrw' && viewItem == 'solution'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createSolutionFolder",
    "when": "view == 'slnbrw' && viewItem == 'solution-cps'"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-solutionExplorer.createSolutionFolder",
    "when": "view == 'slnbrw' && viewItem == 'solution-folder'"
  },
  {
    "key": "alt+8",
    "command": "nugetpackagemanagergui.view"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "ctrl+/",
    "command": "-toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "ctrl+,",
    "command": "editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "ctrl+k ctrl+k",
    "command": "-editor.action.selectFromAnchorToCursor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "ctrl+,",
    "command": "editor.action.setSelectionAnchor",
    "when": "editorTextFocus && !selectionAnchorSet"
  },
  {
    "key": "ctrl+k ctrl+b",
    "command": "-editor.action.setSelectionAnchor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l w",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+l a",
    "command": "editor.action.goToSelectionAnchor"
  },
  {
    "key": "alt+d",
    "command": "deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j ctrl+shift+j",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "shift+alt+0",
    "command": "-workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "ctrl+x ,",
    "command": "workbench.action.toggleEditorGroupLayout"
  },
  {
    "key": "ctrl+alt+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "alt+/",
    "command": "-gitlens.gitCommands",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+.",
    "command": "-auto-close-tag.closeTag"
  },
  {
    "key": "alt+s",
    "command": "-gitlens.showQuickRepoStatus",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+x k",
    "command": "workbench.action.closeActivePinnedEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "ctrl+shift+j",
    "command": "rust-analyzer.joinLines",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-rust-analyzer.joinLines",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+j",
    "command": "editor.action.joinLines"
  },
  {
    "key": "ctrl+shift+g /",
    "command": "-gitlens.gitCommands",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+;",
    "command": "-breadcrumbs.focus",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "alt+n",
    "command": "scrollLineDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+p",
    "command": "scrollLineUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+j shift+s",
    "command": "workbench.action.files.saveAll"
  },
  {
    "key": "ctrl+l ctrl+u",
    "command": "editor.action.transformToUppercase"
  },
  {
    "key": "ctrl+l ctrl+l",
    "command": "editor.action.transformToLowercase"
  },
  {
    "key": "ctrl+h d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+h t",
    "command": "editor.action.goToTypeDefinition"
  },
  {
    "key": "ctrl+h shift+t",
    "command": "editor.action.peekTypeDefinition"
  },
  {
    "key": "ctrl+h i",
    "command": "editor.action.goToImplementation",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+h ctrl+k",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+enter",
    "command": "-debug.openBreakpointToSide",
    "when": "breakpointsFocused"
  },
  {
    "key": "alt+.",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+shift+s",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+shift+r",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+j b",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l b",
    "command": "editor.action.selectToBracket"
  },
  {
    "key": "shift+alt+p",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+n",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+right",
    "command": "-cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+left",
    "command": "-cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-cursorWordEndRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-editor.action.extensioneditor.showfind",
    "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "ctrl+f",
    "command": "-editor.action.webvieweditor.showFind",
    "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "ctrl+f",
    "command": "-notebook.find",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+f",
    "command": "-problems.action.focusFilter",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+f",
    "command": "-repl.action.filter",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+f",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+left",
    "command": "cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+i",
    "command": "cursorWordRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+f",
    "command": "cursorWordRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+d",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+u",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+k down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "ctrl+k left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "ctrl+k right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "shift+alt+1",
    "command": "-workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "shift+alt+9",
    "command": "-workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "ctrl+shift+pageup",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+shift+pagedown",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+m t",
    "command": "workbench.action.terminal.moveToTerminalPanel",
    "when": "terminalEditorFocus"
  },
  {
    "key": "shift+alt+d",
    "command": "deleteInsideWord",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+u",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+i",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+a",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+g d",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "ctrl+j l",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g ctrl+h",
    "command": "pr:github.focus"
  },
  {
    "key": "ctrl+g j",
    "command": "workbench.view.extension.json-views"
  },
  {
    "key": "ctrl+k ctrl+h",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+s",
    "command": "list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "ctrl+f",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "ctrl+n",
    "command": "focusNextCodeAction",
    "when": "CodeActionMenuVisible"
  },
  {
    "key": "ctrl+p",
    "command": "focusPreviousCodeAction",
    "when": "CodeActionMenuVisible"
  },
  {
    "key": "ctrl+right",
    "command": "cursorWordRight",
    "when": "textInputFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+g t",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-memo.openReferenceBeside",
    "when": "editorTextFocus && memo:refFocusedOrHovered && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-notebook.cell.insertCodeCellAbove",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+.",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.key.alt+,",
    "when": "gitlens:key:,"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+,",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.key.alt+.",
    "when": "gitlens:key:."
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-addCursorsAtSearchResults",
    "when": "fileMatchOrMatchFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+l s",
    "command": "editor.action.sortLinesAscending",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+l shift+s",
    "command": "editor.action.sortLinesDescending",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "alt+p",
    "command": "-keybindings.editor.toggleSortByPrecedence",
    "when": "inKeybindings"
  },
  {
    "key": "ctrl+enter",
    "command": "-problems.action.openToSide",
    "when": "problemFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-workbench.action.submitComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "search.action.focusSearchList",
    "when": "searchInputBoxFocus"
  },
  {
    "key": "ctrl+g f3",
    "command": "workbench.view.search.focus"
  },
  {
    "key": "alt+.",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+alt+c ctrl+alt+c",
    "command": "-comment-ts.commentThis"
  },
  {
    "key": "ctrl+t ctrl+t",
    "command": "editor.action.transposeLetters",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+c",
    "command": "problems.action.copyMessage",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+c",
    "command": "-problems.action.copy",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+x shift+0",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "ctrl+8",
    "command": "workbench.action.focusPanel"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+g shift+s",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+y",
    "command": "-redo"
  },
  {
    "key": "ctrl+l ctrl+;",
    "command": "rewrap.rewrapComment",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+q",
    "command": "-rewrap.rewrapComment",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+d",
    "command": "-editor.detectLanguage",
    "when": "editorTextFocus && !notebookEditable"
  },
  {
    "key": "shift+alt+d",
    "command": "-notebook.cell.detectLanguage",
    "when": "notebookCellEditable && notebookEditable"
  },
  {
    "key": "ctrl+k s",
    "command": "-workbench.action.files.saveWithoutFormatting"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x ctrl+a",
    "command": "workbench.files.action.showActiveFileInExplorer"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+=",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+-",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "ctrl+shift+=",
    "command": "editor.action.fontZoomReset"
  },
  {
    "key": "ctrl+[",
    "command": "-markdown.extension.onOutdentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "shift+alt+,",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+x o",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "findInputFocussed"
  },
  {
    "key": "ctrl+l ctrl+s",
    "command": "editor.action.sortLinesAscending",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "ctrl+x ctrl+e",
    "command": "sqlite.runDocumentQuery",
    "when": "editorLangId == 'sqlite'"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-sqlite.runDocumentQuery",
    "when": "editorLangId =~ /(sql|sqlite)/"
  },
  {
    "key": "ctrl+f",
    "command": "acceptSelectedSuggestionOnEnter",
    "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "alt+q",
    "command": "rewrap.rewrapComment",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly && !editorHasSelection"
  },
  {
    "key": "ctrl+h k",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+x e",
    "command": "sqlite.runSelectedQuery",
    "when": "editorLangId == 'sqlite'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-insertDateString.insertDateTime",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+i",
    "command": "-insertDateString.insertOwnFormatDateTime",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+space",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "alt+c",
    "command": "toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+c",
    "command": "-toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-overtype.toggle",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+[",
    "command": "editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+[",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+]",
    "command": "editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+]",
    "command": "-editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+]",
    "command": "markdown.extension.editing.toggleHeadingUp",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+[",
    "command": "markdown.extension.editing.toggleHeadingDown",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-markdown.extension.editing.toggleHeadingDown",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+l m",
    "command": "markdown.extension.toc.update",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+]",
    "command": "-markdown.extension.onIndentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+k ctrl+,",
    "command": "-editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+alt+c",
    "command": "-copyFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+shift+alt+c",
    "command": "-copyRelativeFilePath",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k ctrl+-",
    "command": "-editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "ctrl+k ctrl+alt+s",
    "command": "-git.stageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "ctrl+k ctrl+n",
    "command": "-git.unstageSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-notebook.cell.collapseCellInput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-notebook.cell.expandCellInput",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "ctrl+k ctrl+shift+\\",
    "command": "-notebook.cell.split",
    "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "key": "ctrl+k ctrl+.",
    "command": "-editor.removeManualFoldingRanges",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+9",
    "command": "-editor.unfoldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+=",
    "command": "-editor.unfoldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+shift+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+k u",
    "command": "-workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "ctrl+k ctrl+shift+\\",
    "command": "-workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "ctrl+k shift+o",
    "command": "-workbench.action.compareEditor.openSide",
    "when": "inDiffEditor"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+g f",
    "command": "workbench.files.action.focusFilesExplorer"
  },
  {
    "key": "ctrl+enter",
    "command": "-markdown.extension.onCtrlEnterKey",
    "when": "editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+shift+g .",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g .",
    "command": "-gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g .",
    "command": "-gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g ,",
    "command": "-gitlens.diffWithPrevious",
    "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g ,",
    "command": "-gitlens.diffWithPreviousInDiffLeft",
    "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g ,",
    "command": "-gitlens.diffWithPreviousInDiffRight",
    "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g shift+[IntlBackslash]",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g shift+.",
    "command": "-gitlens.diffWithWorking",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
  },
  {
    "key": "ctrl+shift+g [IntlBackslash]",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g shift+,",
    "command": "-gitlens.diffLineWithPrevious",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
  },
  {
    "key": "ctrl+shift+g shift+h",
    "command": "-gitlens.showQuickRepoHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g h",
    "command": "-gitlens.showQuickFileHistory",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g c",
    "command": "-gitlens.showQuickCommitFileDetails",
    "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g s",
    "command": "-gitlens.showQuickRepoStatus",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "ctrl+shift+g shift+b",
    "command": "-gitlens.toggleCodeLens",
    "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+x 5",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+x 6",
    "command": "workbench.action.files.openFileFolder"
  },
  {
    "key": "ctrl+g p",
    "command": "workbench.action.problems.focus"
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "down",
    "command": "focusNextCodeAction",
    "when": "CodeActionMenuVisible"
  },
  {
    "key": "up",
    "command": "focusPreviousCodeAction",
    "when": "CodeActionMenuVisible"
  },
  {
    "key": "ctrl+j right",
    "command": "workbench.action.moveEditorToRightGroup"
  },
  {
    "key": "ctrl+j up",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "key": "ctrl+j left",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "ctrl+j down",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "key": "up",
    "command": "cursorUp",
    "when": "textInputFocus && !codeActionMenuVisible && !inQuickOpen && listFocus"
  },
  {
    "key": "ctrl+x ctrl+b",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
  },
  {
    "key": "ctrl+j ;",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+p",
    "command": "cursorUp",
    "when": "textInputFocus && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "focusPreviousCodeAction",
    "when": "CodeActionMenuVisible"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+l i",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+l k",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+l l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+l j",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "shift+f2",
    "command": "file-browser.rename"
  },
  {
    "key": "shift+alt+p",
    "command": "-openapi.preview",
    "when": "editorTextFocus && !openapiErrors"
  },
  {
    "key": "shift+alt+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.splitEditorInGroup"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.joinEditorInGroup",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "ctrl+k ctrl+shift+\\",
    "command": "-workbench.action.joinEditorInGroup",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "alt+g c",
    "command": "git.commitStaged"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorLeft"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+k ctrl+\\",
    "command": "-workbench.action.splitEditorUp"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+enter",
    "command": "-markdown.extension.onCtrlEnterKey",
    "when": "editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+shift+z",
    "command": "undo"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+alt+y",
    "command": "-better-kill-ring.history",
    "when": "textInputFocus && !editorHasMultipleSelections && !editorReadonly"
  },
  {
    "key": "alt+v",
    "command": "cursorPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+/",
    "command": "undo"
  },
  {
    "key": "ctrl+shift+y",
    "command": "redo"
  },
  {
    "key": "ctrl+shift+v",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+shift+k",
    "command": "deleteAllRight"
  },
  {
    "key": "ctrl+k",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+enter",
    "command": "keybindings.editor.defineWhenExpression",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "ctrl+k ctrl+e",
    "command": "-keybindings.editor.defineWhenExpression",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "ctrl+l ctrl+k",
    "command": "editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/home/cbocardo/.config/Code/User/keybindings.json'"
  },
  {
    "key": "ctrl+k ctrl+k",
    "command": "-editor.action.defineKeybinding",
    "when": "resource == 'vscode-userdata:/home/cbocardo/.config/Code/User/keybindings.json'"
  },
  {
    "key": "alt+l",
    "command": "-toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+h p",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+; ctrl+m",
    "command": "-testing.openOutputPeek"
  },
  {
    "key": "ctrl+enter",
    "command": "keybindings.editor.addKeybinding",
    "when": "inKeybindings && keybindingFocus"
  },
  {
    "key": "ctrl+l shift+m",
    "command": "markdown.extension.toc.create",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+k i",
    "command": "-interactiveEditor.start",
    "when": "interactiveEditorHasProvider && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-workbench.action.terminal.focusHover",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+q",
    "command": "keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "alt+k",
    "command": "-keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "ctrl+x p",
    "command": "workbench.action.pinEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "ctrl+k shift+enter",
    "command": "-workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "alt+b",
    "command": "cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-notebook.formatCell",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-search.action.restrictSearchToFolder",
    "when": "folderMatchWithResourceFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+x space",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+x enter",
    "command": "workbench.action.createTerminalEditor"
  },
  {
    "key": "ctrl+x ctrl+enter",
    "command": "workbench.action.createTerminalEditorSide"
  },
  {
    "key": "enter",
    "command": "search.action.focusSearchList",
    "when": "searchInputBoxFocus"
  },
  {
    "key": "ctrl+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+x ctrl+r",
    "command": "reader-mode.toggleFile"
  },
  {
    "key": "ctrl+x shift+r",
    "command": "reader-mode.toggleWorkspace"
  },
  {
    "key": "shift+alt+a",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+l ctrl+j",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+g g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+j shift+;",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+x ctrl+e",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive' && editorLangId != 'sql' && editorLangId != 'sqlite'"
  },
  {
    "key": "ctrl+g e",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+x o",
    "command": "workbench.action.focusNextGroup",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+x ctrl+q",
    "command": "workbench.action.files.toggleActiveEditorReadonlyInSession"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+l ctrl+shift+j",
    "command": "editor.action.blockComment"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+g s",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+shift+z",
    "command": "-redo"
  },
  {
    "key": "ctrl+shift+/",
    "command": "redo"
  },
  {
    "key": "ctrl+g m",
    "command": "gotoNextPreviousMember.nextMember"
  },
  {
    "key": "ctrl+g shift+m",
    "command": "gotoNextPreviousMember.previousMember"
  },
  {
    "key": "ctrl+k ctrl+d",
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+u",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+shift+u",
    "command": "deleteAllLeft"
  },
  {
    "key": "alt+k",
    "command": "editor.action.duplicateSelection",
    "when": "editorTextFocus && !editorReadonly && editorHasSelection"
  },
  {
    "key": "alt+k",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly && !editorHasSelection"
  },
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.duplicateSelection",
    "when": "editorHasSelection && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x p",
    "command": "workbench.action.unpinEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "tab",
    "command": "-insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-insertBestCompletion",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "alt+l",
    "command": "emacs.C-l",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "-emacs.C-l",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+a",
    "command": "workbench.action.terminal.selectAll",
    "when": "terminalFocus"
  },
  {
    "key": "alt+h g",
    "command": "git.viewFileHistory"
  },
  {
    "key": "alt+h",
    "command": "-git.viewFileHistory"
  },
  {
    "key": "ctrl+h ctrl+g",
    "command": "git.viewHistory"
  },
  {
    "key": "ctrl+g g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+e ctrl+b",
    "command": "-sqltools.formatSql",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !editorReadonly"
  },
  {
    "key": "ctrl+g ctrl+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+; c",
    "command": "-jupyter.changeCellToCode",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; m",
    "command": "-jupyter.changeCellToMarkdown",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; x",
    "command": "-jupyter.deleteCells",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; a",
    "command": "-jupyter.insertCellAbove",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; b",
    "command": "-jupyter.insertCellBelow",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; s",
    "command": "-jupyter.insertCellBelowPosition",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; d",
    "command": "-jupyter.moveCellsDown",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+; u",
    "command": "-jupyter.moveCellsUp",
    "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
  },
  {
    "key": "ctrl+g shift+.",
    "command": "outline.followCursor"
  },
  {
    "key": "ctrl+g .",
    "command": "outline.toggleVisibility",
    "when": "focusedView == 'outline'"
  },
  {
    "key": "ctrl+g .",
    "command": "outline.focus",
    "when": "focusedView != 'outline'"
  },
  {
    "key": "ctrl+t e",
    "command": "workbench.view.testing.focus"
  },
  {
    "key": "ctrl+l f",
    "command": "editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+l",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus && !findWidgetVisible"
  },
  {
    "key": "ctrl+shift+l",
    "command": "-editor.action.selectHighlights",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+enter",
    "command": "-editor.action.selectAllMatches",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "alt+enter",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+j b",
    "command": "rust-analyzer.matchingBrace",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "key": "shift+alt+enter",
    "command": "editor.action.addSelectionToPreviousFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.insertSnippet",
    "when": "editorFocus && !editorHasSelection"
  },
  {
    "key": "ctrl+shift+m",
    "command": "editor.action.surroundWithSnippet",
    "when": "editorFocus && editorHasSelection"
  },
  {
    "key": "ctrl+x .",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "shift+alt+h",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "shift+alt+h",
    "command": "rust-analyzer.ssr",
    "when": "editorFocus && editorLangId == 'rust'"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+,",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showIncomingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "-editor.showOutgoingCalls",
    "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
  },
  {
    "key": "shift+alt+h",
    "command": "-references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "alt+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "ctrl+s",
    "command": "editor.action.nextMatchFindAction",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+h shift+g",
    "command": "git.viewLineHistory"
  },
  {
    "key": "ctrl+g c",
    "command": "git.openChange"
  },
  {
    "key": "ctrl+g ctrl+c",
    "command": "git.openAllChanges"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+x ctrl+f",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "shift+delete",
    "command": "keybindings.editor.resetKeybinding",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "key": "alt+s",
    "command": "-markdown.extension.editing.toggleStrikethrough",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+v",
    "command": "cursorPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+v",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "shift+alt+v",
    "command": "notifications.focusLastToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "shift+alt+v",
    "command": "notifications.focusLastToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "shift+alt+v",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "alt+v",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+v",
    "command": "notifications.focusFirstToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "alt+v",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "alt+v",
    "command": "workbench.action.interactivePlayground.pageUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "alt+v",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pagedown",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pageup",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+shift+v",
    "command": "markdown.extension.editing.paste",
    "when": "editorHasSelection && editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+y",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+alt+r",
    "command": "revealInExplorer",
    "when": "editorFocus"
  },
  {
    "key": "shift+delete",
    "command": "deleteWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "shift+backspace",
    "command": "deleteWordPartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "shift+backspace",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+backspace",
    "command": "deleteWordPartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+t r",
    "command": "testing.refreshTests",
    "when": "testing.canRefresh"
  },
  {
    "key": "ctrl+; ctrl+r",
    "command": "-testing.refreshTests",
    "when": "testing.canRefresh"
  },
  {
    "key": "ctrl+t ctrl+a",
    "command": "testing.runAll"
  },
  {
    "key": "ctrl+; a",
    "command": "-testing.runAll"
  },
  {
    "key": "ctrl+t a",
    "command": "testing.reRunFailTests"
  },
  {
    "key": "ctrl+; e",
    "command": "-testing.reRunFailTests"
  },
  {
    "key": "ctrl+t o",
    "command": "testing.showMostRecentOutput",
    "when": "testing.hasAnyResults"
  },
  {
    "key": "ctrl+; ctrl+o",
    "command": "-testing.showMostRecentOutput",
    "when": "testing.hasAnyResults"
  },
  {
    "key": "ctrl+t c",
    "command": "dotnet.test.runTestsInContext"
  },
  {
    "key": "ctrl+t f",
    "command": "testing.runCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+; f",
    "command": "-testing.runCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+;",
    "command": "-breadcrumbs.focus",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "alt+q alt+w",
    "command": "-jump-extension.jump-to-the-end-of-a-word",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+q alt+r",
    "command": "-jump-extension.select-to-the-end-of-a-word",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l ctrl+d",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "ctrl+l d",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "ctrl+x ctrl+x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+x",
    "command": "-filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+w",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+shift+d",
    "command": "markdown.extension.onCopyLineDown",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+l ctrl+`",
    "command": "markdown.extension.editing.toggleCodeSpan",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+l `",
    "command": "markdown.extension.editing.toggleCodeBlock",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^qmd$/"
  },
  {
    "key": "ctrl+v",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+v",
    "command": "-filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+v",
    "command": "-markdown.extension.editing.paste",
    "when": "editorHasSelection && editorTextFocus && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+v",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+v",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCrceated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+v",
    "command": "-workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+c ctrl+v",
    "command": "paste"
  },
  {
    "key": "ctrl+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+l shift+-",
    "command": "markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+i",
    "command": "-markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+l shift+8",
    "command": "markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+x",
    "command": "-editor.action.clipboardCutAction"
  },
  {
    "key": "ctrl+x ctrl+x",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "key": "ctrl+shift+x",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "key": "ctrl+up",
    "command": "-gotoNextPreviousMember.previousMember"
  },
  {
    "key": "ctrl+down",
    "command": "-gotoNextPreviousMember.nextMember"
  },
  {
    "key": "alt+x",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+space",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+w",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "key": "ctrl+\\",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+c",
    "command": "editor.action.clipboardCopyAction",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+alt+w",
    "command": "toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchEditorWholeWord",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "shift+alt+w",
    "command": "workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+w",
    "command": "-workbench.action.terminal.toggleFindWholeWord",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+w",
    "command": "toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+w",
    "command": "toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+pagedown",
    "command": "-scrollPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+pageup",
    "command": "-scrollPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j shift+tab",
    "command": "workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "ctrl+'",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+'",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+,",
    "command": "cursorWordLeftSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+shift+b",
    "command": "csdevkit.buildSolution",
    "when": "resourceLangId == 'csharp'"
  },
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.tasks.build",
    "when": "taskCommandsRegistered && resourceLangId != 'csharp'"
  },
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "tab",
    "command": "editor.action.inlineSuggest.showNext",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "alt+]",
    "command": "-editor.action.inlineSuggest.showNext",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "shift+tab",
    "command": "editor.action.inlineSuggest.showPrevious",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "alt+[",
    "command": "-editor.action.inlineSuggest.showPrevious",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+f",
    "command": "editor.action.inlineSuggest.commit",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+x i",
    "command": "editor.action.inlineSuggest.toggleAlwaysShowToolbar"
  },
  {
    "key": "ctrl+shift+i",
    "command": "editor.action.inlineSuggest.trigger"
  },
  {
    "key": "ctrl+x u",
    "command": "editor.action.autoFix",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "shift+alt+.",
    "command": "-editor.action.autoFix",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "ctrl+x e",
    "command": "csdevkit.debug.noDebugProjectLaunch",
    "when": "resourceLangId == 'csharp'"
  },
  {
    "key": "ctrl+;",
    "command": "-ms-azurecli.toggleLiveQuery",
    "when": "editorTextFocus && editorLangId == 'azcli'"
  },
  {
    "key": "ctrl+x e",
    "command": "ms-azurecli.runLineInTerminal",
    "when": "editorTextFocus && editorLangId == 'azcli'"
  },
  {
    "key": "ctrl+'",
    "command": "-ms-azurecli.runLineInTerminal",
    "when": "editorTextFocus && editorLangId == 'azcli'"
  },
  {
    "key": "ctrl+shift+'",
    "command": "-ms-azurecli.runLineInEditor",
    "when": "editorTextFocus && editorLangId == 'azcli'"
  },
  {
    "key": "shift+space",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.extension.closePreview",
    "when": "markdownPreviewFocus"
  },
  {
    "key": "ctrl+alt+[",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+alt+]",
    "command": "editor.unfoldAll"
  },
  {
    "key": "ctrl+x ctrl+z",
    "command": "workbench.action.toggleZenMode"
  },
  {
    "key": "alt+w",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "down",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "up",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-mssql.connect",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "ctrl+alt+d",
    "command": "-workbench.view.extension.objectExplorer"
  },
  {
    "key": "ctrl+x ctrl+e",
    "command": "mssql.runQuery",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-mssql.runQuery",
    "when": "editorTextFocus && editorLangId == 'sql'"
  },
  {
    "key": "alt+right",
    "command": "extension.arrowForwardBtn",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+l shift+d",
    "command": "prettier.forceFormatDocument"
  },
  {
    "key": "ctrl+k ctrl+p",
    "command": "-workbench.action.showAllEditors"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+j f",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+j d",
    "command": "file-browser.open"
  },
  {
    "key": "ctrl+k ctrl+x",
    "command": "-editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x k",
    "command": "workbench.action.closeActiveEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "ctrl+shift+q",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "ctrl+j ctrl+j",
    "command": "workbench.action.focusNextGroup",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+j tab",
    "command": "workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+j ctrl+j",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+x o",
    "command": "workbench.action.focusOtherSideEditor",
    "when": "sideBySideEditorActive"
  },
  {
    "key": "ctrl+j ctrl+j",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+x b",
    "command": "workbench.action.showAllEditors"
  },
  {
    "key": "ctrl+j z",
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "maximizedEditorGroup || multipleEditorGroups"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "-workbench.action.toggleMaximizeEditorGroup",
    "when": "maximizedEditorGroup || multipleEditorGroups"
  },
  {
    "key": "ctrl+j ctrl+j",
    "command": "workbench.action.focusNextGroup",
    "when": "activeWebviewPanelId == 'markdown.preview'"
  },
  {
    "key": "ctrl+x o",
    "command": "workbench.action.focusNextGroup",
    "when": "activeWebviewPanelId == 'markdown.preview'"
  },
  {
    "key": "ctrl+j j",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
  },
  {
    "key": "ctrl+j o",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+j s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+j w",
    "command": "workbench.action.closeActivePinnedEditor",
    "when": "activeEditorIsPinned"
  },
  {
    "key": "ctrl+j w",
    "command": "workbench.action.closeActiveEditor",
    "when": "!activeEditorIsPinned"
  },
  {
    "key": "ctrl+j '",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+j q",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+l n",
    "command": "explorer.newFile"
  },
  {
    "key": "ctrl+l shift+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "ctrl+j a",
    "command": "list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.terminal.openDetectedLink",
    "when": "terminalFocus && terminalHasBeenCreated"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.action.terminal.openDetectedLink",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "alt+q alt+e",
    "command": "-jump-extension.select-to-the-start-of-a-word",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+q alt+q",
    "command": "-jump-extension.jump-to-the-start-of-a-word",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j shift+z",
    "command": "workbench.action.maximizeEditorHideSidebar"
  },
  {
    "key": "ctrl+;",
    "command": "vscode-easymotion.jumpToWord",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+/",
    "command": "-vscode-easymotion.jumpToWord",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+;",
    "command": "vscode-easymotion.jumpToEndOfWord",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+/",
    "command": "-vscode-easymotion.jumpToEndOfWord",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+j a",
    "command": "editor.action.selectAll"
  }
]